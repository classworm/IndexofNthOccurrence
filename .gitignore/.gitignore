using Xunit;

namespace Lesson_A
{
    public class B12_IndexOfNthOccurance
    {
        /// <summary>
        /// Find and return the index of nth occurance of v. Return -1 if v occurs less than n times. 
        /// </summary>
        public static int IndexOfNthOccurance(int[] a, int n, int v)
        {
			int ind =0;
			for (int i = 0; i< a.Length; i++)
			{
				if (a[i] == v) 
				{
					ind = i;
					return ind;
				} break;
			}
			
			if (ind < n)
			{
				return -1;
			} else if (ind >= n)
			{
				return ind;
			}

			return 0;

		}

        [Fact]
        public void Test1()
        {
            Assert.Equal(1, IndexOfNthOccurance(new int[] { 3, 5, 23 }, 1, 5));
        }

        [Fact]
        public void Test2()
        {
            Assert.Equal(3, IndexOfNthOccurance(new int[] { 7, 12, 15, 15, 15, 23, 1 }, 2, 15));
        }

        [Fact]
        public void Test3()
        {
            Assert.Equal(-1, IndexOfNthOccurance(new int[] { 0, 1, 4, 2, 4, 6, 6, 4, 3, 4, 2 }, 3, 4));
        }

        [Fact]
        public void Test4()
        {
            Assert.Equal(-1, IndexOfNthOccurance(new int[] { 9, 9, 9, 1}, 4, 9));
        }
    }
}
